{"ast":null,"code":"var _jsxFileName = \"D:\\\\movie_application\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { authAPI } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for existing token on mount\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async data => {\n    try {\n      const response = await authAPI.login(data);\n      const {\n        token: newToken,\n        user: newUser\n      } = response;\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setToken(newToken);\n      setUser(newUser);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n    }\n  };\n  const register = async data => {\n    try {\n      const response = await authAPI.register(data);\n      const {\n        token: newToken,\n        user: newUser\n      } = response;\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setToken(newToken);\n      setUser(newUser);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setToken(null);\n    setUser(null);\n  };\n  const value = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authAPI","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","loading","setLoading","storedToken","localStorage","getItem","storedUser","JSON","parse","login","data","response","newToken","newUser","setItem","stringify","error","_error$response","_error$response$data","message","register","_error$response2","_error$response2$data","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/movie_application/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { AuthContextType, User, LoginData, RegisterData } from '../types';\r\nimport { authAPI } from '../utils/api';\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check for existing token on mount\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n    \r\n    if (storedToken && storedUser) {\r\n      setToken(storedToken);\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (data: LoginData): Promise<void> => {\r\n    try {\r\n      const response = await authAPI.login(data);\r\n      const { token: newToken, user: newUser } = response;\r\n      \r\n      localStorage.setItem('token', newToken);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      \r\n      setToken(newToken);\r\n      setUser(newUser);\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.message || 'Login failed');\r\n    }\r\n  };\r\n\r\n  const register = async (data: RegisterData): Promise<void> => {\r\n    try {\r\n      const response = await authAPI.register(data);\r\n      const { token: newToken, user: newUser } = response;\r\n      \r\n      localStorage.setItem('token', newToken);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      \r\n      setToken(newToken);\r\n      setUser(newUser);\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.message || 'Registration failed');\r\n    }\r\n  };\r\n\r\n  const logout = (): void => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    token,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}