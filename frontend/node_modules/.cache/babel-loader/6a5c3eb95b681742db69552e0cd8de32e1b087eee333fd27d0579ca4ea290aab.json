{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API functions\nexport const authAPI = {\n  login: async data => {\n    const response = await api.post('/auth/login', data);\n    return response.data;\n  },\n  register: async data => {\n    const response = await api.post('/auth/register', data);\n    return response.data;\n  },\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authAPI","login","data","response","post","register","getProfile","get"],"sources":["D:/movie_application/frontend/src/utils/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { AuthResponse, LoginData, RegisterData } from '../types';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add auth token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Auth API functions\r\nexport const authAPI = {\r\n  login: async (data: LoginData): Promise<AuthResponse> => {\r\n    const response = await api.post('/auth/login', data);\r\n    return response.data;\r\n  },\r\n\r\n  register: async (data: RegisterData): Promise<AuthResponse> => {\r\n    const response = await api.post('/auth/register', data);\r\n    return response.data;\r\n  },\r\n\r\n  getProfile: async () => {\r\n    const response = await api.get('/auth/profile');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,OAAO,GAAG;EACrBC,KAAK,EAAE,MAAOC,IAAe,IAA4B;IACvD,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,aAAa,EAAEF,IAAI,CAAC;IACpD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC;EAEDG,QAAQ,EAAE,MAAOH,IAAkB,IAA4B;IAC7D,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,gBAAgB,EAAEF,IAAI,CAAC;IACvD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC;EAEDI,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,MAAMH,QAAQ,GAAG,MAAMf,GAAG,CAACmB,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOJ,QAAQ,CAACD,IAAI;EACtB;AACF,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}